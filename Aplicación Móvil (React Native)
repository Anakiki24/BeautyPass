* App/src/App.js
<!-- end list -->
import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import AppNavigator from './navigation/AppNavigator'; // Suponiendo que tienes este navegador

function App() {
return (
<NavigationContainer>
<AppNavigator />
</NavigationContainer>
);
}

export default App;

* App/src/navigation/AppNavigator.js
<!-- end list -->
import React from 'react';
import { createStackNavigator } from '@react-navigation/stack';
import HomeScreen from '../screens/HomeScreen';
import SalonDetailsScreen from '../screens/SalonDetailsScreen';
// ... Importa otras pantallas

const Stack = createStackNavigator();

function AppNavigator() {
return (
<Stack.Navigator initialRouteName="Home">
<Stack.Screen name="Home" component={HomeScreen} options={{ title: 'Inicio' }} />
<Stack.Screen name="SalonDetails" component={SalonDetailsScreen} options={{ title: 'Detalles del Salón' }} />
{/* ... Define otras pantallas en la navegación */}
</Stack.Navigator>
);
}

export default AppNavigator;

* App/src/screens/HomeScreen.js
<!-- end list -->
import React from 'react';
import { View, Text, StyleSheet, FlatList } from 'react-native';
import SalonCard from '../components/SalonCard'; // Suponiendo que tienes este componente

const HomeScreen = () => {
const salones = [
{ id: '1', nombre: 'Salón Belleza', ubicacion: 'Centro' },
{ id: '2', nombre: 'Spa Relajante', ubicacion: 'Norte' },
// ... Datos de ejemplo de salones
];

const renderSalon = ({ item }) => <SalonCard salon={item} />;

return (
<View style={styles.container}>
<Text style={styles.title}>Salones Cercanos</Text>
<FlatList
data={salones}
renderItem={renderSalon}
keyExtractor={item => item.id}
/>
</View>
);
};

const styles = StyleSheet.create({
container: {
flex: 1,
padding: 16,
},
title: {
fontSize: 24,
fontWeight: 'bold',
marginBottom: 16,
},
});

export default HomeScreen;

* App/src/components/SalonCard.js
<!-- end list -->
import React from 'react';
import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';
import { useNavigation } from '@react-navigation/native';

const SalonCard = ({ salon }) => {
const navigation = useNavigation();

return (
<TouchableOpacity style={styles.card} onPress={() => navigation.navigate('SalonDetails', { salonId: salon.id })}>
<Text style={styles.name}>{salon.nombre}</Text>
<Text style={styles.location}>{salon.ubicacion}</Text>
</TouchableOpacity>
);
};

const styles = StyleSheet.create({
card: {
backgroundColor: 'white',
padding: 16,
marginBottom: 16,
borderRadius: 8,
shadowColor: '#000',
shadowOffset: { width: 0, height: 2 },
shadowOpacity: 0.2,
shadowRadius: 2,
elevation: 3,
},
name: {
fontSize: 18,
fontWeight: 'bold',
},
location: {
fontSize: 14,
color: 'gray',
},
});

export default SalonCard;

* App/package.json
<!-- end list -->
{
"name": "BeautyPassApp",
"version": "0.0.1",
"private": true,
"scripts": {
"android": "react-native run-android",
"ios": "react-native run-ios",
"start": "react-native start",
"test": "jest",
"lint": "eslint ."
},
"dependencies": {
"@react-navigation/native": "^6.x.x", // Reemplaza con la versión actual
"@react-navigation/stack": "^6.x.x", // Reemplaza con la versión actual
"react": "18.2.0", // Reemplaza con la versión que uses
"react-native": "0.71.x" // Reemplaza con la versión que uses
// ... Otras dependencias
},
"devDependencies": {
"@babel/core": "^7.20.0",
"@babel/preset-env": "^7.20.0",
"@babel/runtime": "^7.20.0",
"@react-native-community/eslint-config": "^3.2.0",
"babel-jest": "^29.2.1",
"eslint": "^8.19.0",
"jest": "^29.2.1",
"metro-react-native-babel-preset": "0.73.x", // Reemplaza con la versión que uses
"react-test-renderer": "18.2.0" // Reemplaza con la versión que uses
},
"jest": {
"preset": "react-native"
}
}
